

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.2.1/userguide/java_library_plugin.html
 */

plugins {

    // Apply the java-library plugin to add support for Java Library & others
    val plugins = listOf("java-library","eclipse","jacoco")
    plugins.forEach {
        id(it)
    }
        id("org.sonarqube") version "2.7"
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api("org.apache.commons:commons-math3:3.6.1")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.google.guava:guava:23.0")

    // Use JUnit test framework
    testImplementation("junit:junit:4.12")

    // This dependency is requited to use HTML5 parser.
    val tk = System.getProperty("awt.toolkit")
	val osarch = System.getProperty("os.arch")
	val v8pkg = "com.eclipsesource.j2v8:j2v8_"
	val v8ver = "4.6.0"
	var osname = when(tk) {
		"sun.awt.X11.XToolkit" -> "linux"
		"sun.awt.windows.WToolkit" -> "win32"
		else -> null
	}
	var arch = when(osarch) {
		"amd64" -> "x86_64"
		"x86" -> "x86"
		else -> null
	}

	val v8id = StringBuffer(v8pkg + osname + "_" + arch + ":" + v8ver )

	val deps = listOf(
			"org,jsoup:jsoup:1.11.3",
			v8id
	)
	deps.forEach {
		compile(it)
	}

}
// In this section you declare where to find the dependencies of your project

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
	maven(url = StringBuffer("http://repo1.maven.org/maven2/"))
    maven(url = StringBuffer("https://plugins.gradle.org/m2/"))

}

// SonarQube Code Scanning 'sonarqube' section.
sonarqube {
	properties {
		property("sonar.host.url","https://sonarcloud.io")
		property("sonar.sources","src/main/java")
		property("sonar.language","java")
	}
}